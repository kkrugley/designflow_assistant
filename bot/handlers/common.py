# file: bot/handlers/common.py

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
from .project_manager.keyboards import get_project_manager_keyboard
from .template_manager.keyboards import get_automations_menu_keyboard

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è
router = Router()

# --- –ö–õ–ê–í–ò–ê–¢–£–†–´ ---

def get_main_menu_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üóÇ –ú–µ–Ω–µ–¥–∂–µ—Ä –ü—Ä–æ–µ–∫—Ç–æ–≤", callback_data="project_manager")
    )
    builder.row(
        InlineKeyboardButton(text="‚ú® –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏", callback_data="automations")
    )
    return builder.as_markup()


# --- –•–≠–ù–î–õ–ï–†–´ ---

@router.message(CommandStart())
async def cmd_start(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    welcome_text = (
        "üëã **–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, Design-Sidekick Bot.**\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–µ–∫—Ç–∞–º–∏, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—É—Ç–∏–Ω—É –∏ "
        "–æ—Å–≤–æ–±–æ–¥–∏—Ç—å –≤—Ä–µ–º—è –¥–ª—è —Å–∞–º–æ–≥–æ –≥–ª–∞–≤–Ω–æ–≥–æ ‚Äî —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞.\n\n"
        "–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?"
    )
    await message.answer(welcome_text, reply_markup=get_main_menu_keyboard())


@router.callback_query(F.data == "back_to_main")
async def back_to_main_menu(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥", –≤–æ–∑–≤—Ä–∞—â–∞—é—â–µ–π –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º answer_callback_query, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
    await callback.answer()
    
    menu_text = "–° —á–µ–≥–æ –Ω–∞—á–Ω–µ–º?"
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –º–µ–Ω—é –ø–æ—è–≤–∏–ª–æ—Å—å –Ω–∞ –º–µ—Å—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
    await callback.message.edit_text(menu_text, reply_markup=get_main_menu_keyboard())

# –ü—É—Å—Ç—ã—à–∫–∏-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
# –û–Ω–∏ –Ω—É–∂–Ω—ã, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ "–≤–∏—Å" –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –Ω–∏—Ö
@router.callback_query(F.data == "project_manager")
async def show_project_manager_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤."""
    await callback.answer() # –£–±–∏—Ä–∞–µ–º "—á–∞—Å–∏–∫–∏"
    await callback.message.edit_text(
        "üóÇ **–ú–µ–Ω–µ–¥–∂–µ—Ä –ü—Ä–æ–µ–∫—Ç–æ–≤**\n\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –∏–¥–µ—è–º–∏ –∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏.",
        reply_markup=get_project_manager_keyboard()
    )

@router.callback_query(F.data == "automations")
async def show_automations_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–π."""
    await callback.answer()
    await callback.message.edit_text(
        "‚ú® **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏**\n\n–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —à–∞–±–ª–æ–Ω–∞–º–∏.",
        reply_markup=get_automations_menu_keyboard()
    )